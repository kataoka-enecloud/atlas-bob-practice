// Code generated by BobGen psql v0.41.1. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbinfo

var GroupUsers = Table[
	groupUserColumns,
	groupUserIndexes,
	groupUserForeignKeys,
	groupUserUniques,
	groupUserChecks,
]{
	Schema: "",
	Name:   "group_users",
	Columns: groupUserColumns{
		GroupID: column{
			Name:      "group_id",
			DBType:    "bigint",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
		UserID: column{
			Name:      "user_id",
			DBType:    "bigint",
			Default:   "",
			Comment:   "",
			Nullable:  false,
			Generated: false,
			AutoIncr:  false,
		},
	},

	ForeignKeys: groupUserForeignKeys{
		GroupUsersGroupUsersGroupIDFkey: foreignKey{
			constraint: constraint{
				Name:    "group_users.group_users_group_id_fkey",
				Columns: []string{"group_id"},
				Comment: "",
			},
			ForeignTable:   "groups",
			ForeignColumns: []string{"id"},
		},
		GroupUsersGroupUsersUserIDFkey: foreignKey{
			constraint: constraint{
				Name:    "group_users.group_users_user_id_fkey",
				Columns: []string{"user_id"},
				Comment: "",
			},
			ForeignTable:   "users",
			ForeignColumns: []string{"id"},
		},
	},

	Comment: "",
}

type groupUserColumns struct {
	GroupID column
	UserID  column
}

func (c groupUserColumns) AsSlice() []column {
	return []column{
		c.GroupID, c.UserID,
	}
}

type groupUserIndexes struct{}

func (i groupUserIndexes) AsSlice() []index {
	return []index{}
}

type groupUserForeignKeys struct {
	GroupUsersGroupUsersGroupIDFkey foreignKey
	GroupUsersGroupUsersUserIDFkey  foreignKey
}

func (f groupUserForeignKeys) AsSlice() []foreignKey {
	return []foreignKey{
		f.GroupUsersGroupUsersGroupIDFkey, f.GroupUsersGroupUsersUserIDFkey,
	}
}

type groupUserUniques struct{}

func (u groupUserUniques) AsSlice() []constraint {
	return []constraint{}
}

type groupUserChecks struct{}

func (c groupUserChecks) AsSlice() []check {
	return []check{}
}
